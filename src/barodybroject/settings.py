"""
Django settings for barodybroject project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Determine whether we're in production, as this will affect many settings.
prod = bool(os.environ.get("RUNNING_IN_PRODUCTION", False))

if not prod:  # Running in a Test/Development environment
    DEBUG = True  # SECURITY WARNING: don't run with debug turned on in production!
    DEFAULT_SECRET = "insecure-secret-key"

    ALLOWED_HOSTS = [
        "localhost",
        "127.0.0.1",
    ]
    CSRF_TRUSTED_ORIGINS = [
        "http://localhost:8000",
    ]

else:  # Running in a Production environment
    DEBUG = True  # SECURITY WARNING: don't run with debug turned on in production!
    DEFAULT_SECRET = None
    ALLOWED_HOSTS = [
        os.environ["CONTAINER_APP_NAME"] + "." + os.environ["CONTAINER_APP_ENV_DNS_SUFFIX"],
    ]
    CSRF_TRUSTED_ORIGINS = [
        "https://" + os.environ["CONTAINER_APP_NAME"] + "." + os.environ["CONTAINER_APP_ENV_DNS_SUFFIX"],
    ]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECRET_KEY = 'django-insecure-9=woki=bii5gfdzfb3igh$qcxb=i+-u+!c58xl76x1tk)gaqd3'

SECRET_KEY = os.environ.get("SECRET_KEY", DEFAULT_SECRET)


# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'import_export',  # Add this line to include the import_export app in the project

    # CMS base apps
    'djangocms_admin_style',
    'cms',
    'menus',
    'sekizai',
    'treebeard',
    'filer',
    'easy_thumbnails',
    'djangocms_frontend',
    'djangocms_frontend.contrib.accordion',
    'djangocms_frontend.contrib.alert',
    'djangocms_frontend.contrib.badge',
    'djangocms_frontend.contrib.card',
    'djangocms_frontend.contrib.carousel',
    'djangocms_frontend.contrib.collapse',
    'djangocms_frontend.contrib.content',
    'djangocms_frontend.contrib.grid',
    'djangocms_frontend.contrib.icon',
    'djangocms_frontend.contrib.image',
    'djangocms_frontend.contrib.jumbotron',
    'djangocms_frontend.contrib.link',
    'djangocms_frontend.contrib.listgroup',
    'djangocms_frontend.contrib.media',
    'djangocms_frontend.contrib.navigation',
    'djangocms_frontend.contrib.tabs',
    'djangocms_frontend.contrib.utilities',


    # Third-party apps
    'djangocms_text_ckeditor',
    'djangocms_alias',
    'djangocms_versioning',

    # API and REST Framework
    'rest_framework', # Add this line to include the rest_framework app in the project

    # Baroydy Broject apps
    'parodynews',  # Add this line to include the app in the project

    # Third-party apps
    'django_json_widget',  # Add this line to include the JSON widget app in the project
    'markdownify',  # Add this line to include the markdownify app in the project
    # 'martor',  # Add this line to include the martor app in the project


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.utils.ApphookReloadMiddleware',  # Add this middleware
    'django.middleware.locale.LocaleMiddleware',  # Corrected middleware path
    "cms.middleware.user.CurrentUserMiddleware",
    "cms.middleware.page.CurrentPageMiddleware",
    "cms.middleware.toolbar.ToolbarMiddleware",
    "cms.middleware.language.LanguageCookieMiddleware",
]

ROOT_URLCONF = 'barodybroject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "barodybroject", "templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'parodynews.context_processors.footer_items',  # Add this line to include the footer_items context processor
                'django.template.context_processors.static',
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'barodybroject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

db_options = {}
if ssl_mode := os.environ.get("POSTGRES_SSL"):
    db_options = {"sslmode": ssl_mode}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": os.environ.get("POSTGRES_DATABASE"),
#         "USER": os.environ.get("POSTGRES_USERNAME"),
#         "PASSWORD": os.environ.get("POSTGRES_PASSWORD"),
#         "HOST": os.environ.get("POSTGRES_HOST"),
#         "PORT": os.environ.get("POSTGRES_PORT", 5432),
#         "OPTIONS": db_options,
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LANGUAGES = [
    ('en', 'English'),
    ("de", "German"),
    ("fr", "French"),
    # Add other languages if needed
]

CMS_CONFIRM_VERSION4 = True

CMS_TEMPLATES = [
    ("base.html", _("Base Template")),
    # default templates that extend base.html
    ('parodynews/cms.html', 'CMS Template'),
    # optional templates that extend base.html, to be used with Bootstrap 5
    # ('bootstrap5.html', 'Bootstrap 5 Demo'),
    # Add other templates if needed
]

CMS_PLACEHOLDERS = [
    ('content', 'Content'),
    # Add other placeholders if necessary
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'login'

LOGIN_REDIRECT_URL = 'index'  # Redirect users to a 'home' page defined in your urls.py

STATIC_URL = '/static/'
# Add your static files directory
STATICFILES_DIRS = [
    BASE_DIR / "assets",
    BASE_DIR / "_site/assets",
    # Add other directories if needed
]

# Define STATIC_ROOT for collectstatic
STATIC_ROOT = BASE_DIR / "static"

# Post Root - where generated post files are stored

PAGES_DIR = BASE_DIR / "pages"
POST_DIR = PAGES_DIR / "_posts"

CSRF_COOKIE_HTTPONLY = False


X_FRAME_OPTIONS = "SAMEORIGIN"

SITE_ID = 1

TEXT_INLINE_EDITING = True

DJANGOCMS_VERSIONING_ALLOW_DELETING_VERSIONS = True
