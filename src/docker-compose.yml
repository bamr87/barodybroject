services:
  db:
    image: postgres:14

    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: barodydb
      POSTGRES_PASSWORD: postgres

    restart: unless-stopped

    volumes:
      - postgres-data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d barodydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  python:
    build:
      context: .
      dockerfile: Dockerfile

    depends_on:
      db:
        condition: service_healthy

    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_DATABASE: barodydb
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: postgres
    ports:
      - "8000:8000"
    # volumes:
    #   - ..:/workspace:cached

  # ruby:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.ruby
  #   volumes:
  #     - ./src:/app
  #   ports:
  #     - "4002:4002"

  # web:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "8000:8000"
  #     - "4002:4002"
  #   depends_on:
  #     db:
  #       condition: service_healthy

  #   environment:
  #     POSTGRES_USERNAME: postgres
  #     POSTGRES_DATABASE: barodydb
  #     POSTGRES_HOST: db
  #     POSTGRES_PASSWORD: postgres

  #   volumes:
  #     - ..:/workspace:cached

volumes:
  postgres-data:
