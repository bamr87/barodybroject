services:
  barodydb:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-barodydb}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: trust
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d barodydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  web:
    build:
      context: ./src
      dockerfile: Dockerfile
    volumes:
      - ./src:/app
    depends_on:
      barodydb:
        condition: service_healthy
    environment:
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_NAME: ${DB_NAME:-barodydb}
      DB_HOST: ${DB_HOST:-barodydb}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DJANGO_SETTINGS_MODULE: barodybroject.settings
      DEBUG: "False"
    ports:
      - "80:80"   # Production gunicorn server
    command: ["bash", "-c", "./entrypoint.sh"]

  jekyll:
    image: jekyll/jekyll:latest
    command: jekyll serve --watch --force_polling --config "_config.yml,_config_dev.yml"
    volumes:
      - ./src/pages:/app/pages
    ports:
      - "4002:4002"
    working_dir: /app/pages
    environment:
      JEKYLL_ENV: ${JEKYLL_ENV:-production}

volumes:
  postgres-data: