services:
  barodydb:
    image: postgres:latest
    env_file:
      - ../src/.env
    environment:
      DB_CHOICE: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-barodydb}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}
      DB_PASSWORD: postgres
      RUNNING_IN_PRODUCTION: False
      POSTGRES_SSL: "allow"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d barodydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  python:
    build:
      context: ../
      dockerfile: .devcontainer/Dockerfile_dev
    depends_on:
      barodydb:
        condition: service_healthy
    env_file:
      - ../src/.env
    environment:
      DB_USERNAME: postgres
      DB_NAME: barodydb
      DB_HOST: barodydb
      DB_PASSWORD: postgres
    ports:
      - "80:80"
    working_dir: /workspace/src
    volumes:
      - ../src/.env:/workspace/.env:ro

  jekyll:
    image: jekyll/jekyll:latest
    command: jekyll serve --watch --force_polling --config "_config.yml,_config_dev.yml"
    volumes:
      - ../src/pages:/workspace/pages
    ports:
      - "4002:4002"
    working_dir: /workspace/pages
    env_file:
      - ../src/.env
    environment:
      JEKYLL_ENV: development

volumes:
  postgres-data:
# test