services:
  barodydb:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-barodydb}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}
      POSTGRES_SSL: ${POSTGRES_SSL:-allow}
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d barodydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - barody-network

  python:
    image: python:3.11-slim
    platform: linux/amd64
    working_dir: /workspace/src
    depends_on:
      barodydb:
        condition: service_healthy
    environment:
      RUNNING_IN_PRODUCTION: ${RUNNING_IN_PRODUCTION:-False}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_NAME: ${DB_NAME:-barodydb}
      DB_HOST: ${DB_HOST:-barodydb}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DJANGO_SETTINGS_MODULE: barodybroject.settings
      DEBUG: "True"
      PYTHONPATH: /workspace/src
      PYTHONUNBUFFERED: 1
      # Installation wizard configuration for development
      SKIP_INSTALLATION_CHECK: ${SKIP_INSTALLATION_CHECK:-true}
      SETUP_TOKEN_EXPIRY_HOURS: ${SETUP_TOKEN_EXPIRY_HOURS:-2}
      SETUP_DATA_DIR: /workspace/setup_data
    ports:
      - "8000:8000"
      - "5678:5678"  # VS Code debugger
    volumes:
      - ../:/workspace
      - setup-data-dev:/workspace/setup_data  # Persist installation wizard state
      - dev-logs:/workspace/logs               # Persist development logs
    networks:
      - barody-network
    command:
      - /bin/bash
      - -c
      - |
        apt-get update && apt-get install -y postgresql-client git build-essential pkg-config libcairo2-dev python3-dev
        pip install --upgrade pip
        pip install -r requirements.txt
        
        # Create necessary directories
        mkdir -p /workspace/setup_data /workspace/logs
        
        # Run database migrations
        python manage.py migrate
        
        # Start development server
        python manage.py runserver 0.0.0.0:8000

  jekyll:
    image: jekyll/jekyll:latest
    command: jekyll serve --watch --force_polling --config "_config.yml,_config_dev.yml"
    volumes:
      - ../src/pages:/workspace/pages
    ports:
      - "4002:4002"
    working_dir: /workspace/pages
    environment:
      JEKYLL_ENV: ${JEKYLL_ENV:-development}
    networks:
      - barody-network

volumes:
  postgres-data:
  setup-data-dev:
  dev-logs:

networks:
  barody-network:
    driver: bridge
